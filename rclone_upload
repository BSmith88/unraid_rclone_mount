#!/bin/bash

#############################################################################
######################          Upload Script          ######################
######################            GUI Build            ######################
#############################################################################
#############################################################################
######################         Version 0.97.X          ######################
#############################################################################
#############################################################################
#############################################################################
# INSTRUCTIONS                                                              #
# Edit the settings below to match your setup                               #
# NOTE: Enter Remote Names WITHOUT ':'                                      #
# Optional: Add additional commands or filters                              #
# Optional: Use bind mount settings for potential traffic shaping           #
# Optional: Use service accounts in your upload remote                      #
# Optional: Use Backup Directory for rclone sync jobs                       #
# Optional: Utilize Beta WebGUI. Note - This may still be prone to errors   #
#############################################################################


#############################################################################
########################          ----------          #######################
########################      Required Settings       #######################
########################          ----------          #######################
#############################################################################

RcloneCommand="copy" # choose your rclone command. Options are: move, copy, sync.
RcloneRemoteName="gcrypt" # Name of rclone remote mount WITHOUT ':'.
RcloneUploadRemoteName="gcrypt" # If you have a second remote created for uploads put it here.  Otherwise use the same remote as RcloneRemoteName.
LocalFilesShare="/mnt/user/local" # location of the local files without trailing slash you want to rclone to use
RcloneMountShare="/mnt/user/mount_rclone" # where your rclone mount is located without trailing slash  e.g. /mnt/user/mount_rclone
MinimumAge="15m" # sync files suffix ms|s|m|h|d|w|M|y *Not applicable for Rclone Beta GUI
ModSort="ascending" # "ascending" oldest files first, "descending" newest files first


#############################################################################
########################          ----------          #######################
########################      Optional Settings       #######################
########################          ----------          #######################
#############################################################################

#############################################################################
########################     Add Upload Job Name      #######################
#############################################################################

JobName="_daily_upload" # Adds custom string to end of checker file.  Useful if you're running multiple jobs against the same remote.

#############################################################################
######################        Bandwidth Limits?        ######################
##############  Suffix b|k|M|G. Or 'off' or '0' for Unlimited  ##############
# The script uses --drive-stop-on-upload-limit which stops the script if    #
# the 750GB/day limit is achieved, so you no longer have to slow 'trickle'  #
# your files all day if you don't want to e.g. could just do an unlimited   #
# job overnight.                                                            #
#############################################################################

BWLimit1Time="01:00"
BWLimit1="off"
BWLimit2Time="08:00"
BWLimit2="off"
BWLimit3Time="16:00"
BWLimit3="off"

#############################################################################
###################         Custom Rclone Commands        ###################
################### **Not Applicable with Rclone WebGUI** ###################
#############################################################################

Command1=""
Command2=""
Command3=""
Command4=""
Command5=""
Command6=""
Command7=""
Command8=""

#############################################################################
##########                    Use Beta WebGUI                       #########
##########   Settings for GUI must match settings in Mount script   #########
#############################################################################

Webgui="Y" # Y/N. Choose whether to enable rclones beta web-gui
Webgui_Username="watchmeexplode5" # Username for WebGUI
Webgui_Password="V8Ranger" # Password for WebGUI
Webgui_Address=":5572" #IP:Port for your local webGUI. Default ":5572" will host WebGUI at http://Unraid's-IP:5572
Exclusionfilter="/downloads/**" #Ruleset to be placed in the exclusion filter (IE what rclone mover will ignore). Leave as default "/downloads/**" unless you have a special case. 


#############################################################################
###########               Bind Upload to Unique IP                ###########
###########    Do not set to "Y" if you are using Beta WebGUI     ###########
#############################################################################

CreateBindMount="N" # Y/N. Choose whether or not to bind traffic to a network adapter.
RCloneMountIP="192.168.1.253" # Choose IP to bind upload to.
NetworkAdapter="eth0" # choose your network adapter. eth0 recommended.
VirtualIPNumber="1" # creates eth0:x e.g. eth0:1.

#############################################################################
#############                 Service Accounts                 ##############
#############   Guide: https://github.com/xyou365/AutoRclone   ##############
#############################################################################

UseServiceAccountUpload="Y" # Y/N. Choose whether to use Service Accounts.
ServiceAccountDirectory="/mnt/user/appdata/other/rclone/service_accounts" # Path to your Service Account's .json files.
ServiceAccountFile="sa_gdrive_upload" # Enter characters before counter in your json files e.g. for sa_gdrive_upload1.json, sa_gdrive_upload2.json, ect: enter "sa_gdrive_upload".
CountServiceAccounts="99" # Integer number of service accounts to use.

#############################################################################
#####   Additional Settings required for Service Accounts WITH WebGUI   #####
#####                            ------------                           #####
#####        Due to -RC you must have another additional remotes        #####
#####         dedicated to Service accounts in your rclone.conf         #####
#####                            ------------                           #####
#####            See github project Read.me for more detail             #####
#############################################################################

ServiceAccountRemoteName="gui_service" #Remote name of non-crypt share for service account (eg. "service_account"). If you are not using encryption put single service remote name ("service_account")
ServiceAccountCryptName="gui_service_crypt" #Remote name of crypt share for service account (eg. "service_account_crypt"). If you are not using encryption use the same remote as ServiceAccountRemoteName

#############################################################################
######################      Is this a Backup Job?      ######################
#############################################################################

BackupJob="N" # Y/N. Syncs or Copies files from LocalFilesLocation to BackupRemoteLocation, rather than moving from LocalFilesLocation/RcloneRemoteName
BackupRemoteLocation="backup" # choose location on mount for deleted sync files
BackupRemoteDeletedLocation="backup_deleted" # choose location on mount for deleted sync files
BackupRetention="90d" # How long to keep deleted sync files suffix ms|s|m|h|d|w|M|y


#############################################################################
#############################################################################
#####                                                                   #####
#####                          -------------                            #####
#####                       END OF USER SETTINGS                        #####
#####                          -------------                            #####
#####                                                                   #####
#####  DO NOT EDIT BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING   #####
#############################################################################
#############################################################################
#############################################################################


######################  Prep Mount Location Variables  ######################
if [[  $BackupJob == 'Y' ]]; then
	LocalFilesLocation="$LocalFilesShare"
	echo "$(date "+%d.%m.%Y %T") INFO: *** Backup selected.  Files will be copied or synced from ${LocalFilesLocation} for ${RcloneUploadRemoteName} ***"
else
	LocalFilesLocation="$LocalFilesShare/$RcloneRemoteName"
	echo "$(date "+%d.%m.%Y %T") INFO: *** Rclone move selected.  Files will be moved from ${LocalFilesLocation} for ${RcloneUploadRemoteName} ***"
fi

RcloneMountLocation="$RcloneMountShare/$RcloneRemoteName" # Location of rclone mount

######################   Create Dir for Script Files   ######################
mkdir -p /mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName

####################   Create Exclusion File for WebGUI  ####################
if [[  $Webgui == 'Y' ]]; then
	Excludepath="/mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/exclude.txt"
	if [[ -f /mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/exclude.txt ]]; then
		echo "$(date "+%d.%m.%Y %T") INFO: Exclude.txt file already present."
	else
		echo "$(date "+%d.%m.%Y %T") INFO: Adding exclude.txt file for mount."
		cat <<-EOF > /mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/exclude.txt
		$Exclusionfilter
		*partial~
		EOF
	fi
fi

###################### Check if Upload Already Running ######################
echo "$(date "+%d.%m.%Y %T") INFO: *** Starting rclone_upload script for ${RcloneUploadRemoteName} ***"
if [[ -f "/mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/upload_running$JobName" ]]; then
	echo "$(date "+%d.%m.%Y %T") INFO: Exiting as script already running."
	exit
else
	echo "$(date "+%d.%m.%Y %T") INFO: Script not running - proceeding."
	touch /mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/upload_running$JobName
fi

######################  Check if Mount is Functioning  ######################
echo "$(date "+%d.%m.%Y %T") INFO: Checking if rclone installed successfully."
if [[ -f "$RcloneMountLocation/mountcheck" ]]; then
	echo "$(date "+%d.%m.%Y %T") INFO: rclone installed successfully - proceeding with upload."
else
	echo "$(date "+%d.%m.%Y %T") INFO: rclone not installed - will try again later."
	rm /mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/upload_running$JobName
	exit
fi

######################  Set Service Account Variables  ######################
if [[ $UseServiceAccountUpload == 'Y' ]]; then
	cd /mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/
	CounterNumber=$(find -name 'counter*' | cut -c 11,12)
	CounterCheck="1"
	if [[ "$CounterNumber" -ge "$CounterCheck" ]];then
		echo "$(date "+%d.%m.%Y %T") INFO: Counter file found for ${RcloneUploadRemoteName}."
	else
		echo "$(date "+%d.%m.%Y %T") INFO: No counter file found for ${RcloneUploadRemoteName}. Creating counter_1."
		touch /mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/counter_1
		CounterNumber="1"
	fi
	ServiceAccount="--drive-service-account-file=$ServiceAccountDirectory/$ServiceAccountFile$CounterNumber.json"
	ServiceAccountGUI="$ServiceAccountDirectory/$ServiceAccountFile$CounterNumber.json"
	echo "$(date "+%d.%m.%Y %T") INFO: Upload will occur using ${RcloneUploadRemoteName} remote with ${ServiceAccountFile}${CounterNumber}.json associated."
else
	echo "$(date "+%d.%m.%Y %T") INFO: Upload will occur using ${RcloneUploadRemoteName} remote"
	ServiceAccount=""
fi

######################     Set Delete Dir for Move     ######################

if [[  $RcloneCommand == 'move' ]]; then
	echo "$(date "+%d.%m.%Y %T") INFO: *** Using rclone move command - will add attribute delete-empty-src-dirs to upload."
	if [[  $Webgui == 'Y' ]]; then
	DeleteEmpty="true"
	else
	DeleteEmpty="--delete-empty-src-dirs "
	fi
else
	echo "$(date "+%d.%m.%Y %T") INFO: *** Not using rclone move - will not issue delete-empty-src-dirs to upload"
	if [[  $Webgui == 'Y' ]]; then
	DeleteEmpty="false"
	else
	DeleteEmpty=""
	fi
fi

######################   Check for Backup Directory    ######################
if [[  $BackupJob == 'Y' ]]; then
	echo "$(date "+%d.%m.%Y %T") INFO: *** Will backup to ${BackupRemoteLocation} and use  ${BackupRemoteDeletedLocation} as --backup-directory with ${BackupRetention} retention for ${RcloneUploadRemoteName}."
	LocalFilesLocation="$LocalFilesShare"
	BackupDir="--backup-dir $RcloneUploadRemoteName:$BackupRemoteDeletedLocation"
else
	BackupRemoteLocation=""
	BackupRemoteDeletedLocation=""
	BackupRetention=""
	BackupDir=""
fi

######################   Set Rclone WebGUI Variables   ######################
if [[  $Webgui == 'Y' ]]; then
	echo "$(date "+%d.%m.%Y %T") INFO: *** WebGUI Enabled - Note this is still currently in beta and may have errors or issues associated with it"
	Webguicommands="--rc-user=$Webgui_Username --rc-pass=$Webgui_Password --rc-addr=192.168.1.219:5572"
		if [[ $UseServiceAccountUpload == 'Y' ]]; then
			echo "$(date "+%d.%m.%Y %T") INFO: Modifying ${ServiceAccountRemoteName} to utilize service account with ${ServiceAccountFile}${CounterNumber} as credentials"
			Uploadremote="$ServiceAccountCryptName:$BackupRemoteLocation"
			rclone rc $Webguicommands config/update --json '{"name": "'"$ServiceAccountRemoteName"'", "parameters": {"service_account_file": "'"$ServiceAccountGUI"'"}}'
		else
		Uploadremote="$RcloneUploadRemoteName:$BackupRemoteLocation"
		fi
	echo "$(date "+%d.%m.%Y %T") INFO: Modifying GLOBAL RC Flags for Upload Settings"
	rclone rc $Webguicommands options/set --json '{"filter": {"ExcludeFrom": ["'"$Excludepath"'"]}}'
	RcloneCommandRC="sync/$RcloneCommand"
	CreateBindMount="N"
fi

######################      Check Binding Options      ######################
if [[  $CreateBindMount == 'Y' ]]; then
	echo "$(date "+%d.%m.%Y %T") INFO: *** Checking if IP address ${RCloneMountIP} already created for upload to remote ${RcloneUploadRemoteName}"
	ping -q -c2 $RCloneMountIP > /dev/null # -q quiet, -c number of pings to perform
	if [ $? -eq 0 ]; then # ping returns exit status 0 if successful
		echo "$(date "+%d.%m.%Y %T") INFO: *** IP address ${RCloneMountIP} already created for upload to remote ${RcloneUploadRemoteName}"
	else
		echo "$(date "+%d.%m.%Y %T") INFO: *** Creating IP address ${RCloneMountIP} for upload to remote ${RcloneUploadRemoteName}"
		ip addr add $RCloneMountIP/24 dev $NetworkAdapter label $NetworkAdapter:$VirtualIPNumber
	fi
else
	RCloneMountIP=""
fi

######################     Rclone Upload Commands      ###################### 
if [[  $Webgui == 'Y' ]]; then
	echo "$(date "+%d.%m.%Y %T") INFO: Uploading through RC with WebGUI Enabled"
	rclone rc $Webguicommands \
	$RcloneCommandRC \
	--json '{"srcFs":"'"$LocalFilesLocation"'", "dstFs":"'"$Uploadremote"'", "deleteEmptySrcDirs":"'"$DeleteEmpty"'"}'
else
	echo "$(date "+%d.%m.%Y %T") INFO: Uploading With WebGUI Disabled"
	rclone $RcloneCommand $LocalFilesLocation $RcloneUploadRemoteName:$BackupRemoteLocation $ServiceAccount $BackupDir -vP \
	--user-agent="$RcloneUploadRemoteName" \
	--buffer-size 512M \
	--drive-chunk-size 512M \
	--stats 9999m \
	--use-mmap \
	--tpslimit 8 \
	--checkers 8 \
	--transfers 4 \
	--order-by modtime,$ModSort \
	--min-age $MinimumAge \
	$Command1 $Command2 $Command3 $Command4 $Command5 $Command6 $Command7 $Command8 \
	--exclude *fuse_hidden* \
	--exclude *_HIDDEN \
	--exclude .recycle** \
	--exclude .Recycle.Bin/** \
	--exclude *.backup~* \
	--exclude *.partial~* \
	--drive-stop-on-upload-limit \
	--bwlimit "${BWLimit1Time},${BWLimit1} ${BWLimit2Time},${BWLimit2} ${BWLimit3Time},${BWLimit3}" \
	--bind=$RCloneMountIP $DeleteEmpty
fi
 
if [[  $UseBackupDirectory == 'Y' ]]; then
######################   Delete old files from mount   ######################
	echo "$(date "+%d.%m.%Y %T") INFO: *** Removing files older than ${BackupRetention} from ${BackupDirectoryLocation} for ${RcloneUploadRemoteName}."
	rclone delete --min-age $BackupRetention $RcloneUploadRemoteName:$BackupRemoteDeletedLocation
fi

#############################################################################
######################       Update Counter File       ######################
######################     Clean-up and Final Tasks    ######################
#############################################################################
if [[  $UseServiceAccountUpload == 'Y' ]]; then
	if [[ "$CounterNumber" == "$CountServiceAccounts" ]];then
		rm /mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/counter_*
		touch /mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/counter_1
		echo "$(date "+%d.%m.%Y %T") INFO: Final counter used - resetting loop and created counter_1."
	else
		rm /mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/counter_*
		CounterNumber=$((CounterNumber+1))
		touch /mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/counter_$CounterNumber
		echo "$(date "+%d.%m.%Y %T") INFO: Created counter_${CounterNumber} for next upload run."
	fi
else
	echo "$(date "+%d.%m.%Y %T") INFO: Not utilising service accounts."
fi

rm /mnt/user/appdata/other/rclone/remotes/$RcloneUploadRemoteName/upload_running$JobName
echo "$(date "+%d.%m.%Y %T") INFO: Script complete"

exit